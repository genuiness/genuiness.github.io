<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>vue</title>
      <link href="/post/24839.html"/>
      <url>/post/24839.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>node.js</title>
      <link href="/post/53734.html"/>
      <url>/post/53734.html</url>
      
        <content type="html"><![CDATA[<p>d： 转d盘</p><p>c: 转c盘</p><p>dir 查看目录</p><p>cd change directory  跳转到指定目录</p><p>. 当前目录</p><p>.. 上级目录</p><p>dir/s  查看文件下（包括子文件夹下）的所有内容</p><p>node.js 中不能使用BOM 和DOM 的API  console  定时器 这两个api 可以在node.js中使用</p><p>node.js中的顶级对象为global，也可用globalThis 访问顶级对象</p><h2 id="Buffer"><a href="#Buffer" class="headerlink" title="Buffer"></a>Buffer</h2><p>Buffer就是一段弧顶长度的内存空间，用于处理二进制数据</p><p>一个线程是属于某个进程的</p><h2 id="fs"><a href="#fs" class="headerlink" title="fs"></a>fs</h2><p>file system</p><p>\r\n 换行</p><p>GET 主要用于获取数据</p><p>POST 主要用于新增数据</p><p>端口是应用程序的数字标识</p><p>端口的主要作用：实现不同主机应用程序之间的通信</p><h2 id="HTTP注意事项"><a href="#HTTP注意事项" class="headerlink" title="HTTP注意事项"></a>HTTP注意事项</h2><p>1.命令行ctrl+c停止服务</p><p>2.当服务启动时，更新代码（必须重启服务才能生效）</p><p>3.响应内容中文乱码的解决方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">response.setHeader(&#x27;content-type&#x27;, &#x27;text/html;charset=utf-8&#x27;)</span><br></pre></td></tr></table></figure><p>4.端口号被占用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Error:listen EADDRINUSE :address already in use:::9000</span><br></pre></td></tr></table></figure><p> 1）关闭当前正在运行监听端口的服务（使用较多）</p><p> 2）修改其他端口号</p><p>5.HTTP协议默认端口是80，HTTP服务开发常用端口有3000，8080，8090，9000等</p><p>如果端口被其他程序占用，可以使用资源监视器找到占用端口的程序，然后使用任务管理器关闭相应的程序</p><p>淘宝镜像安装</p><p>1.安装nrm</p><p>npm  i -g nrm  或者 npm install -g nrm <a href="mailto:&#111;&#112;&#x65;&#x6e;&#64;&#x38;&#46;&#52;&#x2e;&#x32;">&#111;&#112;&#x65;&#x6e;&#64;&#x38;&#46;&#52;&#x2e;&#x32;</a> –save</p><p>2.nrm use taobao</p><p>3.检查是否配置成功</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config list</span><br></pre></td></tr></table></figure><p>nvm:管理node.js版本的工具</p>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ajax</title>
      <link href="/post/37405.html"/>
      <url>/post/37405.html</url>
      
        <content type="html"><![CDATA[<p>Ajax，全称Asynchronous JavaScript and XML ，也就是异步加载的javascript 和 XML，无刷新获取数据</p><p>xml 可扩展标记语言，html 中有预定义标签，而xml中没有预定义标签，全都是自定义标签</p>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>promise</title>
      <link href="/post/46982.html"/>
      <url>/post/46982.html</url>
      
        <content type="html"><![CDATA[<p>promise是一门新的技术，promise时js中进行异步编程的新解决方案</p><p>异步编程:</p><p>fs 文件操作；数据库操作；AJAX；定时器</p><h3 id="为什么用promise："><a href="#为什么用promise：" class="headerlink" title="为什么用promise："></a>为什么用promise：</h3><p>1.指定回调函数的方式的更加灵活</p><p>2.支持链式调用，可以解决回调地狱问题</p>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>二级web</title>
      <link href="/post/7370.html"/>
      <url>/post/7370.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">parseInt() #解析字符串，取整数</span><br></pre></td></tr></table></figure><p>winddows对象:alert、close、confirm</p><p>分割php服务器脚本的分隔符：<?php...?></p><p>B/S三层架构：展示层、业务逻辑层、数据访问层</p><p>对象构成成分：对象名（标识）、属性、操作</p><p>软件工程三要素：方法、工具、过程</p><p>http1.1协议请求方法;get post  option head delete connect</p><p>font-style取值:nomal(确省值) italic（斜体显示） oblique（斜体显示）</p><p>javascript内置对象：String Mata Array Global  Data </p><p>onLoad：页面加载时执行</p><p> onError:页面加载错误时执行</p><p>onFocus:元素获得焦点时执行</p><p>onBlur:元素失去焦点时执行</p><p>PHP不支持<code>&lt;!--这是注释--&gt;</code></p><p>Servet遵循的是java语言的编程标准，jsp更多遵循的是脚本语言的编程标准</p><p>段落对齐方式：左对齐 右对齐  居中对齐 两端  分散</p><p>缩进方式：首行缩进  悬挂缩进</p><p>结构化程序设计原则：自顶向下  逐步求精   模块化及限制使用goto语句</p><p>关系数据模型组成：数据结构 数据操作  数据约束</p><p>FTP：文件传输协议</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">状态代码</span><br><span class="line">1** #提示信息--表示请求已接收</span><br><span class="line">2** #成功--表示请求已被成功接收、理解、接受</span><br><span class="line">3** #重定向--要成功请求必须进行更进一步的操作</span><br><span class="line">4** #客户端错误--请求有语法错误或请求无法实现</span><br><span class="line">5** #服务器端错误--服务器未能实现合法的请求</span><br></pre></td></tr></table></figure><p>窗口属性</p><p>-blank  在新窗口打开</p><p>_self  表示相同窗口</p><p>_top （清除所有框架并在当前窗口显示）</p><p>_parent 在父窗口</p><p>javaScript运算符</p><p>= 表示赋值</p><p>==表示关系运算相等</p><p>&amp;&amp;表示逻辑运算与</p><p>获取系统当地日期与时间的方法：new Data();</p><p>toifxed 保留两位小数</p><p>负责数据通讯:XMLHttpRequest(数据通讯涉及到数据的交换)</p><p>进程具有动态性 共享性 独立性 制约性 并发性</p><p>描述全局数据逻辑结构的时概念模式</p><p>外模式（子模式或用户模式）时用户的数据视图</p><p>内模式（物理模式）时数据物理结构和存储方式的描述，是数据在数据库内部的表现方式</p><p>jsp和java Servet 都是在服务器端运行</p><p>TCP/IP 传输控制协议/因特网互联协议</p><p>统一资源定位符url常见的基本格式&lt;访问协议&gt;：//&lt;主机名&gt;:&lt;端口号&gt;/&lt;文件路径&gt;<br>https默认使用443端口进行通信</p><p>http默认使用80端口进行通信</p><p>text-transform 设置字母大小写 none capitalize文本中的单词以大写字母开头  uppercase（定义仅有大写字母）</p><p>lowercase（定义无大写字母） inherit（从父元素继承值）</p><p>Math.radom() 用于产生0-1之间的随机数</p><p>round（）返回四舍五入后取证的数字</p><p>bgsound用来在html文档中链接声音文件</p><p>substr(x,y) 从下标位置x开始，选y个  </p><p>isNaN函数用于检测其参数是否是非数字值</p><p>floor()函数向下取整计算，他返回的是小于或等于函数参数</p><p>realdyState五种状态：0–未初始化  1–载入  2–载入完成  3–交互  4–完成，数据解析完成</p><p>黑盒测试方法和技巧：等价类划分法  边界值分析法  错误推测法  因果图等</p><p>白盒测试方法和技巧：逻辑覆盖测试（语句覆盖 路径覆盖  判定覆盖 条件覆盖 判断-条件覆盖）  基本路径测试</p><p>name不是JavaScript保留字</p><p>GlassFish,TOMCAT,weblogic三个都是JEE应用的服务器，IIS只能用于windows平台的web服务器</p><p>drection指定文本显示方向</p><p>PHP语言是一种服务器端，跨平台，html嵌入式的脚本语言，是一种动态的网页技术</p><p>slice(start,end)函数用来将部分字符抽出并在新的字符串中返回抽取的部分,不填参数返回所有参数，填一个为起始元素下标</p><p>循环队列是队列的一种顺序存储结构</p><p>indexOf() 方法可返回某个指定的字符串值在字符串中首次出现的位置。</p><p>如果没有找到匹配的字符串则返回 -1。</p><p><strong>注意：</strong> indexOf() 方法区分大小写。</p><p>round() 四舍五入</p><p>Math.round()</p>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 二级web相关知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web学习（一）</title>
      <link href="/post/39276.html"/>
      <url>/post/39276.html</url>
      
        <content type="html"><![CDATA[<h3 id="border"><a href="#border" class="headerlink" title="border"></a>border</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">border-width:定义边框粗细</span><br><span class="line">border-style：边框样式  dashed(虚线边框) dotted(点线边框) solid(实线边框)</span><br><span class="line">border-color：边框颜色</span><br><span class="line">border-collapse:合并相邻的边框</span><br></pre></td></tr></table></figure><h3 id="清楚内外边距"><a href="#清楚内外边距" class="headerlink" title="清楚内外边距"></a>清楚内外边距</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">*&#123;</span><br><span class="line">margin:0</span><br><span class="line">padding:0</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="padding（内边距）"><a href="#padding（内边距）" class="headerlink" title="padding（内边距）:"></a>padding（内边距）:</h3><p>1个值：上下左右<br>2：上下，左右<br>3：上，左右，下<br>4：上，左，右，下</p><h3 id="防塌陷"><a href="#防塌陷" class="headerlink" title="防塌陷"></a>防塌陷</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">overflower.hidden</span><br></pre></td></tr></table></figure><h3 id="圆角边框"><a href="#圆角边框" class="headerlink" title="圆角边框"></a>圆角边框</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">border-radius:length</span><br><span class="line">border-radius：左上+右下；右上+左下；</span><br><span class="line">border-radius：左上：右上+左下：右下；</span><br><span class="line">border-radius:左上；右上；右下；左下</span><br></pre></td></tr></table></figure><h3 id="盒子阴影"><a href="#盒子阴影" class="headerlink" title="盒子阴影"></a>盒子阴影</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">box-shadow：h-shadow(水平阴影，可取负)；v-shadow（垂直阴影，可取负）；blur(模糊距离)；spread(阴影尺寸)；color；inset(将外部阴影该为内部阴影)</span><br></pre></td></tr></table></figure><h3 id="行内块转换"><a href="#行内块转换" class="headerlink" title="行内块转换"></a>行内块转换</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">display</span><br></pre></td></tr></table></figure><h3 id="网页布局第一准则"><a href="#网页布局第一准则" class="headerlink" title="网页布局第一准则"></a>网页布局第一准则</h3><p>多个块级元素纵向排列找标准流，对各块级元素横向排列找浮动</p><h3 id="浮动"><a href="#浮动" class="headerlink" title="浮动"></a>浮动</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">float:</span><br></pre></td></tr></table></figure><h3 id="浮动特性"><a href="#浮动特性" class="headerlink" title="浮动特性"></a>浮动特性</h3><p>1.设置了浮动（float）的元素最重要特性</p><p>（1）.脱离标准普通流的控制（浮）移动到指定位置（动），（俗称托脱标）</p><p>（2）.浮动的盒子不再保留原先的位置</p><p>2.如果多个盒子都设置了浮动，则它们会按照属性值-行内显示并且顶端对齐排列</p><p>3.浮动元素会具有行内块元素特性</p><p>​          任何元素都可以浮动，不管原先是什么模式的元素，添加浮动之后具有行内块元素相似的特性</p><p>​              如果块级元素盒子没有设置宽度，默认宽度和父级一样宽，但是添加浮动后，它的大小根据内容来决定</p><p>​              浮动的盒子中间是没有空隙的，是紧挨在一起的</p><p>​               行内元素同理</p><h3 id="浮动布局注意点"><a href="#浮动布局注意点" class="headerlink" title="浮动布局注意点"></a>浮动布局注意点</h3><p>1.浮动和标准流的父盒子搭配</p><p>先用标准流的父元素排列上下位置，之后内部子元素采取浮动排列左右位置</p><p>2.一个元素浮动了，理论上其余的兄弟元素也要浮动</p><p>浮动的盒子只会影响浮动盒子后面的标准流，不会影响前面的标准流</p><h3 id="清除浮动"><a href="#清除浮动" class="headerlink" title="清除浮动"></a>清除浮动</h3><p>clear</p><h4 id="清除浮动方法"><a href="#清除浮动方法" class="headerlink" title="清除浮动方法"></a>清除浮动方法</h4><p>1.父级添加overflow属性</p><p>2.父级添加after伪元素</p><p>3.父级添加双伪元素</p><h3 id="清除浮动–额外标签法"><a href="#清除浮动–额外标签法" class="headerlink" title="清除浮动–额外标签法"></a>清除浮动–额外标签法</h3><p>​    在最后一个浮动的子元素后面添加一个额外标签，添加清除浮动样式</p><h3 id="清除浮动–父级添加overflow"><a href="#清除浮动–父级添加overflow" class="headerlink" title="清除浮动–父级添加overflow"></a>清除浮动–父级添加overflow</h3><p>​    overflow：hidden</p><h3 id="清除浮动–after伪元素法"><a href="#清除浮动–after伪元素法" class="headerlink" title="清除浮动–after伪元素法"></a>清除浮动–after伪元素法</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">           <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">           <span class="attribute">display</span>: block;</span><br><span class="line">           <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">           <span class="attribute">clear</span>: both;</span><br><span class="line">           <span class="attribute">visibility</span>: hidden;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="selector-class">.clearfix</span> &#123;</span><br><span class="line">           <span class="comment">/*IE6、7专有*/</span></span><br><span class="line">           *zoom: <span class="number">1</span>;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><h3 id="清除浮动–双伪元素清除浮动"><a href="#清除浮动–双伪元素清除浮动" class="headerlink" title="清除浮动–双伪元素清除浮动"></a>清除浮动–双伪元素清除浮动</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">::before</span>,</span><br><span class="line">      <span class="selector-class">.clearfix</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">          <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">          <span class="attribute">display</span>: table;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="selector-class">.clearfix</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">          <span class="attribute">clear</span>: both;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="selector-class">.clearfix</span> &#123;</span><br><span class="line">          *zoom: <span class="number">1</span>;</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><h3 id=""><a href="#" class="headerlink" title=""></a></h3><h3 id="图片格式"><a href="#图片格式" class="headerlink" title="图片格式"></a>图片格式</h3><p>jpg()产品类的图片、gif（小动画）、png（背景透明的图片）、psd（设计稿文件）</p><p>定位=定位模式+边偏移</p><p>绝对定位：</p><p>1.如果没有祖先元素或祖先元素没定位，则以浏览器为准定位（Document文档）</p><p>2.如果祖先元素有定位（相对，绝对，固定定位），则以最近一级的有定位祖先元素为参考点移动位置</p><p>3.绝对定位不在占有原先的盒子(脱标)</p><p>子绝父相</p><p>固定定位不占有原先的位置，可跟版心定位</p><p>粘性定位，占有原先位置</p><p>行内元素添加绝对定位或者固定定位，可以直接设置高度和宽度</p><p>块级元素添加绝对或者固定定位，如果不给高度和宽度，默认大小是内容的大小</p><p>脱标的盒子不会出发外边距塌陷</p><p>浮动元素不会压住下面的标准流的文字（图片）。绝对定位或固定定位会</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">display:none 隐藏元素,不保留位置</span><br><span class="line"></span><br><span class="line">display:block 显示元素，转换为块级元素</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">visbility:visible 元素可视</span><br><span class="line"></span><br><span class="line">visibility:hidden 元素隐藏，保留位置 </span><br></pre></td></tr></table></figure><p>overflow(溢出)</p><p>overflow:visible</p><p>overflow:hidden(溢出的隐藏)</p><p>overflow:scroll(溢出的部分显示滚动条，不溢出也显示)</p><p>overflow:auto(溢出时显示滚动条，不溢出，不显示)</p>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo+github搭建博客</title>
      <link href="/post/16778.html"/>
      <url>/post/16778.html</url>
      
        <content type="html"><![CDATA[<h2 id="工具安装"><a href="#工具安装" class="headerlink" title="工具安装"></a>工具安装</h2><p><a href="https://blog.csdn.net/weixin_52799373/article/details/123840137">Node.js</a></p><p><a href="https://blog.csdn.net/weixin_52799373/article/details/123840137">https://blog.csdn.net/weixin_52799373/article/details/123840137</a></p><p><a href="https://www.cnblogs.com/xueweisuoyong/p/11914045.html">Git</a></p><p><a href="https://www.cnblogs.com/xueweisuoyong/p/11914045.html">https://www.cnblogs.com/xueweisuoyong/p/11914045.html</a></p><h2 id="本地博客搭建"><a href="#本地博客搭建" class="headerlink" title="本地博客搭建"></a>本地博客搭建</h2><p>1.打开git bash here安装cnpm </p><p>命令：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry==https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p>安装后验证：<code>cnpm -v</code> 出现版本号说明安装成功</p><p>2.安装hexo （安装博客框架）</p><p>命令：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>安装后验证：<code>hexo -v</code> 出现版本号说明安装成功</p><p>3.在电脑某位置新建文件夹（随意取名·，例如·我的为blog,以下出现的blog即为我现在创建的文件夹）,打开该文件夹，鼠标右击文件夹空白处打开git bish here.</p><p>​    并依次执行以下命令:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init  #初始化命令，hexo会自动下载一些文件到这个目录，包括node_modules等</span><br><span class="line">hexo g     #生成命令，生成静态文件</span><br><span class="line">hexo s     #启动服务</span><br></pre></td></tr></table></figure><p>如果hexo init 命令执行不成功，可能是网络原因，可多试几次，如果仍未成功，可换成这条命令</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx hexo init &quot;你想创建的表名&quot;</span><br></pre></td></tr></table></figure><p>输入 hexo s 后，你便可通过<a href="http://localhost:4000/%E8%AE%BF%E9%97%AE%E4%BD%A0%E6%90%AD%E5%BB%BA%E7%9A%84%E6%9C%AC%E5%9C%B0%E5%8D%9A%E5%AE%A2%E4%BA%86">http://localhost:4000/访问你搭建的本地博客了</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hwxo常见指令</span><br><span class="line">hexo g 生成静态文件 </span><br><span class="line">hexo d 部署到 Github</span><br><span class="line">hexo s 启动本地服务</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="上传至github服务器"><a href="#上传至github服务器" class="headerlink" title="上传至github服务器"></a>上传至github服务器</h2><h3 id="github账号注册"><a href="#github账号注册" class="headerlink" title="github账号注册"></a>github账号注册</h3><p>可自行尝试或搜索</p><h3 id="生成ssh-keys"><a href="#生成ssh-keys" class="headerlink" title="生成ssh keys"></a>生成ssh keys</h3><p>打开 git bash here 输入以下命令生成ssh keys</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;你的邮箱地址&quot;</span><br></pre></td></tr></table></figure><p>执行命令时要敲击四次回车，第二次回车时输入y</p><p>密钥位置：C/USER/用户名/.ssh</p><p>打开.ssh文件夹中后标为pub的文件，复制其中内容</p><p><strong>注意：pub文件放置的，就是我们的公开的ssh码，也是给管理员这个ssh，让他来添加</strong></p><p>打开你的github账号，点击右上角头像，点击其中的setting，点击左边的SSH and GPG keys,选择新建ssh keys </p><p>Title：随意填写</p><p>Key：将本地的id_rsa.pub文件用记事本打开，复制全部内容粘贴到GitHub 仓库的SSH Keys 位置</p><h3 id=""><a href="#" class="headerlink" title=""></a></h3><h3 id="在github上搭建仓库"><a href="#在github上搭建仓库" class="headerlink" title="在github上搭建仓库"></a>在github上搭建仓库</h3><p>点击主页右方的new</p><p>Repository name;你的github用户名+github.io</p><p>其他均可保持默认，点击Create repository</p><h3 id="将博客部署到GitHub主页上"><a href="#将博客部署到GitHub主页上" class="headerlink" title="将博客部署到GitHub主页上"></a>将博客部署到GitHub主页上</h3><p>打开你在上面步骤新建的文件夹（例如我新建的为blog,即为打开blog），右击打开 git bush here安装 hexo-deployer-git 插件 </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>编辑blog文件夹内的_config.yml 文件，在末尾进行修改</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: github上对应仓库的ssh链接 or  github上对应的https地址，如：https://github.com/Github用户名/Github用户名.github.io.git            </span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure><p>在git bush here内输入命令：hexo d,把本地博客推送到GitHub</p><p>在此过程中可能会需要你输入github username 和 password    </p><p>至此，你便可以通过 你的github用户名.+github.io访问你的博客了！</p><h3 id="butterfly主题安装"><a href="#butterfly主题安装" class="headerlink" title="butterfly主题安装"></a>butterfly主题安装</h3><p>在博客根目录打开  git bush here ,输入以下命令</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-theme-butterfly</span><br></pre></td></tr></table></figure><p>安装成功后可在根目录的theme文件夹找到下butterfly文件夹</p><h3 id="主题应用"><a href="#主题应用" class="headerlink" title="主题应用"></a>主题应用</h3><p>修改站点配置文件<code>_config.yml</code>，把主题改为<code>butterfly</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme:butterfly</span><br></pre></td></tr></table></figure><p>如果你没有<code>pug</code>以及<code>stylus</code>的渲染器，请下载安装，这两个渲染器是<code>Butterfly</code>生成基础页面所需的依赖包:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><h3 id="主题美化"><a href="#主题美化" class="headerlink" title="主题美化"></a>主题美化</h3><p>推荐链接：<a href="https://www.fomal.cc/posts/eec9786.html">https://www.fomal.cc/posts/eec9786.html</a></p>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 搭建博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/post/1.html"/>
      <url>/post/1.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/post/1.html"/>
      <url>/post/1.html</url>
      
        <content type="html"><![CDATA[<h1 id="v的vv的vv非常v的"><a href="#v的vv的vv非常v的" class="headerlink" title="v的vv的vv非常v的"></a>v的vv的vv非常v的</h1>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
